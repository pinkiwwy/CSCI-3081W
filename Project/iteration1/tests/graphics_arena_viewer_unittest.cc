/* STUDENTS:  DO NOT EDIT THIS FILE.  INSTEAD, MODIFY YOUR OWN PROJECT
 * CODE TO FIT THE SPECIFICATION GIVEN BY THE TESTS IN THIS FILE.
 *
 * If you DO modify it, we overwrite it with a fresh version from our repo
 * when grading, so you can't use it to fudge the tests anyway.
 *
 * This file is used by the CS3081W auto-grading system.
 *
 * Please note, the assessment tests for grading, will use the same include
 * files, class names, and function names for accessing students' code that you
 * find in this file.  So students, if you write your code so that it passes
 * these feedback tests, you can be assured that the auto-grader will at least
 * be able to properly link with your code.
 */

/*******************************************************************************
 * Includes
 ******************************************************************************/
#include <gtest/gtest.h>
#include "../src/graphics_arena_viewer.h"
#include "../src/arena_params.h"
#include "../src/robot.h"

/*******************************************************************************
 * Test Cases
 ******************************************************************************/
//#ifdef PRIORITY1_TESTS
#ifdef GRAPHICS_ARENA_VIEWER_TESTS

// Verify Robot changes direction on keypress
TEST(GraphicsArenaViewer, RobotMotionChange) {
  csci3081::arena_params params;
  params.robot.angle_delta = 30;
  params.robot.speed_delta = 1.0;

  csci3081::InitGraphics();
  csci3081::GraphicsArenaViewer viewer(&params);
  csci3081::Robot * r = viewer.arena()->robot();
  r->heading_angle(180);
  viewer.OnSpecialKeyDown(GLFW_KEY_LEFT, 0, 0);
  EXPECT_LT(r->heading_angle(), 180) <<
      "FAIL: Keypress not transmitted to robot";

  r->heading_angle(180);
  viewer.OnSpecialKeyDown(GLFW_KEY_RIGHT, 0, 0);
  EXPECT_GT(r->heading_angle(), 180) <<
      "FAIL: Keypress not transmitted to robot";

  r->speed(0);
  viewer.OnSpecialKeyDown(GLFW_KEY_UP, 0, 0);
  EXPECT_GT(r->speed(), 0) <<
      "FAIL: Keypress not transmitted to robot";

  r->speed(5);
  viewer.OnSpecialKeyDown(GLFW_KEY_DOWN, 0, 0);
  EXPECT_LT(r->speed(), 5) <<
      "FAIL: Keypress not transmitted to robot";

  viewer.OnSpecialKeyDown(GLFW_KEY_TAB, 0, 0);
  EXPECT_EQ(r->speed(), 0) <<
      "FAIL: Non-Command keypress impacted speed";
  EXPECT_EQ(r->heading_angle(), 0) <<
        "FAIL: Non-Command keypress impacted heading";

  csci3081::ShutdownGraphics();
}
#endif /* PRIORITY1_TESTS */
