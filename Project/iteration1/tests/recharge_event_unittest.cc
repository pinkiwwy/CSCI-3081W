/* STUDENTS:  DO NOT EDIT THIS FILE.  INSTEAD, MODIFY YOUR OWN PROJECT
 * CODE TO FIT THE SPECIFICATION GIVEN BY THE TESTS IN THIS FILE.
 *
 * If you DO modify it, we overwrite it with a fresh version from our repo
 * when grading, so you can't use it to fudge the tests anyway.
 *
 * This file is used by the CS3081W auto-grading system.
 *
 * Please note, the assessment tests for grading, will use the same include
 * files, class names, and function names for accessing students' code that you
 * find in this file.  So students, if you write your code so that it passes
 * these feedback tests, you can be assured that the auto-grader will at least
 * be able to properly link with your code.
 */

/*******************************************************************************
 * Includes
 ******************************************************************************/
#include <gtest/gtest.h>
#include "../src/event_recharge.h"
#include "../src/robot.h"

/*******************************************************************************
 * Test Cases
 ******************************************************************************/
#ifdef PRIORITY1_TESTS

TEST(EventRecharge, Recharge) {
  csci3081::robot_params params;
  params.pos = Position(0, 0);
  params.angle_delta = 15;
  params.battery_max_charge = 100.;
  params.collision_delta = 0.1;
  params.radius = 5.;
  csci3081::Robot r1 = csci3081::Robot(&params);

  r1.speed(5.0);
  r1.heading_angle(45);
  r1.TimestepUpdate(5);

  EXPECT_LT(r1.battery_level(), 100) << "FAIL: Battery not depleted";
  csci3081::EventRecharge e1;
  r1.Accept(&e1);
  EXPECT_DOUBLE_EQ(r1.battery_level(), 100.0) <<
      "FAIL: Recharge event did not recharge battery";
}

#endif /* PRIORITY1_TESTS */
