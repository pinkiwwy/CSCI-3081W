/* STUDENTS:  DO NOT EDIT THIS FILE.  INSTEAD, MODIFY YOUR OWN PROJECT
 * CODE TO FIT THE SPECIFICATION GIVEN BY THE TESTS IN THIS FILE.
 *
 * If you DO modify it, we overwrite it with a fresh version from our repo
 * when grading, so you can't use it to fudge the tests anyway.
 *
 * This file is used by the CS3081W auto-grading system.
 *
 * Please note, the assessment tests for grading, will use the same include
 * files, class names, and function names for accessing students' code that you
 * find in this file.  So students, if you write your code so that it passes
 * these feedback tests, you can be assured that the auto-grader will at least
 * be able to properly link with your code.
 */

/*******************************************************************************
 * Includes
 ******************************************************************************/
#include <gtest/gtest.h>
#include <gmock/gmock.h>
#include "../src/color.h"
#include "../src/arena_immobile_entity.h"

#ifdef ARENA_IMMOBILE_ENTITY_TEST

/*******************************************************************************
 * Class Definitions
 ******************************************************************************/
class FakeArenaEntity : public csci3081::ArenaImmobileEntity {
 public:
  FakeArenaEntity(double radius, const Position& pos,
                  const csci3081::Color& color) :
      ArenaImmobileEntity(radius, pos, color) {}

  MOCK_CONST_METHOD0(get_name, std::string());
};


/*******************************************************************************
 * Test Cases
 ******************************************************************************/
TEST(ArenaImmobileEntity, TimestepUpdate) {
  Position pos(0, 0);
  const csci3081::Color col(255, 255, 255, 255);
  double radius = 1.0;
  FakeArenaEntity aie(radius, pos, col);

  ON_CALL(aie, get_name()).WillByDefault(testing::Return("Fake Entity"));
  for (size_t i = 0; i < 10; ++i) {
    aie.TimestepUpdate(1);
    EXPECT_EQ(aie.get_pos(), pos) <<"FAIL: Immobile entity not immobile";
  } /* for(i..) */
}

#endif /* ARENA_IMMOBILE_ENTITY_TEST */
